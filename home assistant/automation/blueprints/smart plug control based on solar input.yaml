blueprint:
  name: smart plug control based on solar input
  description: Turn a smart plug on/off based on solar input.
  domain: automation
  input:  #Input
    sensor_section:  #Section for all the sensors
      name: Sensors
      icon: mdi:leak
      input:  #Input for sensor_section
        input_pv_power_sensor:
          name: PV Power Total
          description: This sensor will be synchronized with the smart plug.
          selector:
            entity:
              filter:
                - domain: sensor
                
        input_battery_capacity_sensor:
          name: Battery Capacity
          description: This sensor will be synchronized with the smart plug.
          selector:
            entity:
              filter:
                - domain: sensor

    target_section:  #Section for all the targets
      name: Targets
      icon: mdi:power-plug
      input:
        input_target_smart_plug:
            name: Smart Plug
            description: The smart plug to keep in sync.
            selector:
              entity:
                filter:
                  - domain: light

        above_power:
          name: above-value
          description: This input value defines the above-value of solar input.
          
        under_power:
          name: under-value
          description: This input value defines the under-value of solar input.
                
        battery_capacity:
          name: Battery Capacity
          description: This input value defines the battery capacity.

triggers:
  - trigger: numeric_state
    entity_id: !input input_pv_power_sensor
    id: pv_power_sensor
  - trigger: numeric_state
    entity_id: !input input_battery_capacity_sensor
    id: battery_capacity_sensor
  
# alias: Elektrische Heizung 1 turn on/off
# triggers:
#   - alias: more then 2600 Watt input into power grid
#     trigger: numeric_state
#     entity_id: !input pv_power_sensor
#     id: above-2600
#     above: 2600 
#   - alias: less then 2300 Watt input into power grid
#     trigger: numeric_state
#     entity_id: !input pv_power_sensor
#     below: 2300  
#     id: under-2300
# conditions:
#   - condition: numeric_state
#     entity_id: !input battery_capacity_sensor
#     above: 70  
actions:
  - action: >
      {% if trigger.input_pv_power_total.state > "2600" && trigger.input_battery_capacity %}
        light.turn_on
      {% else if trigger.input_pv_power_total < "2300" %}
        light.turn_off
      {% endif %}
  # - choose:
  #     - conditions:
  #         - condition: trigger
  #           id:
  #             - above-2600  
  #       sequence:
  #         - action: light.turn_on
  #           target: !input target_light
  #     - conditions:
  #         - condition: trigger
  #           id:
  #             - under-2300  
  #       sequence:
  #         - action: light.turn_off
  #           target: !input target_light
# mode: single
