blueprint:
  name: "Aktor nach Batteriestand und Zeit steuern"
  description: "Schaltet einen Aktor ein, wenn der Batteriestand zu bestimmten Zeiten an einem bestimmten Wochentag hoch genug ist, und schaltet ihn nach einer bestimmten Zeit automatisch wieder aus. Optional kann eine Benachrichtigung gesendet werden."
  domain: automation
  input:
    switch_entity:
      name: "Schaltbarer Aktor"
      description: "Das Gerät, das geschaltet werden soll."
      selector:
        entity:
          domain: switch
    battery_entity:
      name: "Batteriestand-Sensor"
      description: "Der Sensor, der den Ladezustand des Batteriespeichers angibt."
      selector:
        entity:
          domain: sensor
    default_battery_level:
      name: "Standard-Mindestbatteriestand"
      description: "Standardwert für den Mindestbatteriestand in Prozent. Kann pro Tag überschrieben werden."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    notify:
      name: "Benachrichtigung aktivieren"
      description: "Soll eine Benachrichtigung gesendet werden, wenn der Aktor geschaltet wird?"
      default: false
      selector:
        boolean:
    notify_entity:
      name: "Benachrichtigungsdienst"
      description: "Der Benachrichtigungsdienst, an den die Meldung gesendet werden soll."
      default: ""
      selector:
        entity:
          domain: notify
          multiple: false
    monday:
      name: "Montag Schaltzeit"
      description: "Zeitpunkt an dem der Aktor Montags geschaltet werden soll."
      default: "00:00:00"
      selector:
        time:
    monday_battery:
      name: "Montag Mindestbatteriestand"
      description: "Mindestbatteriestand für Montag in Prozent."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    tuesday:
      name: "Dienstag Schaltzeit"
      description: "Zeitpunkt an dem der Aktor Dienstags geschaltet werden soll."
      default: "00:00:00"
      selector:
        time:
    tuesday_battery:
      name: "Dienstag Mindestbatteriestand"
      description: "Mindestbatteriestand für Dienstag in Prozent."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    wednesday:
      name: "Mittwoch Schaltzeit"
      description: "Zeitpunkt an dem der Aktor Mittwochs geschaltet werden soll."
      default: "00:00:00"
      selector:
        time:
    wednesday_battery:
      name: "Mittwoch Mindestbatteriestand"
      description: "Mindestbatteriestand für Mittwoch in Prozent."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    thursday:
      name: "Donnerstag Schaltzeit"
      description: "Zeitpunkt an dem der Aktor Donnerstags geschaltet werden soll."
      default: "00:00:00"
      selector:
        time:
    thursday_battery:
      name: "Donnerstag Mindestbatteriestand"
      description: "Mindestbatteriestand für Donnerstag in Prozent."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    friday:
      name: "Freitag Schaltzeit"
      description: "Zeitpunkt an dem der Aktor Freitags geschaltet werden soll."
      default: "00:00:00"
      selector:
        time:
    friday_battery:
      name: "Freitag Mindestbatteriestand"
      description: "Mindestbatteriestand für Freitag in Prozent."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    saturday:
      name: "Samstag Schaltzeit"
      description: "Zeitpunkt an dem der Aktor Samstags geschaltet werden soll."
      default: "00:00:00"
      selector:
        time:
    saturday_battery:
      name: "Samstag Mindestbatteriestand"
      description: "Mindestbatteriestand für Samstag in Prozent."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    sunday:
      name: "Sonntag Schaltzeit"
      description: "Zeitpunkt an dem der Aktor Sonntags geschaltet werden soll."
      default: "00:00:00"
      selector:
        time:
    sunday_battery:
      name: "Sonntag Mindestbatteriestand"
      description: "Mindestbatteriestand für Sonntag in Prozent."
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    duration:
      name: "Einschaltdauer"
      description: "Wie lange der Aktor eingeschaltet bleiben soll (in Sekunden)."
      default: 3600
      selector:
        number:
          min: 1
          max: 86400
          unit_of_measurement: "s"

automation:
  - alias: "Schalte Aktor nach Batterielevel und Zeit"
    trigger:
      - platform: time
        at: !input monday
      - platform: time
        at: !input tuesday
      - platform: time
        at: !input wednesday
      - platform: time
        at: !input thursday
      - platform: time
        at: !input friday
      - platform: time
        at: !input saturday
      - platform: time
        at: !input sunday
    condition:
      - condition: template
        value_template: >-
          {% set day = now().strftime('%A').lower() %}
          {% set min_battery_level = states(!input['{}_battery'.format(day)]) | float %}
          {{ states(!input.battery_entity) | float >= min_battery_level }}
    action:
      - service: switch.turn_on
        target:
          entity_id: !input switch_entity
      - if:
          - condition: template
            value_template: "{{ !input.notify }}"
        then:
          - action: notify.notify
            data:
              title: Fußbodenheizung
              message: "Der Aktor {{ !input.switch_entity }} wurde eingeschaltet."
      - delay: "00:00:{{ !input.duration }}"
      - service: switch.turn_off
        target:
          entity_id: !input switch_entity
